require_relative "data"
apartments = data[:apartments]
tenants = data[:tenants]
require_relative "models/apartment"
require_relative "models/tenant"
ruby_apartments = []
ruby_tenants = []


# Loop through Apartments Array
apartments.each do |apartment|

# Create new instance and apply class for each iteration of the loop
  class Apartment
    attr_accessor :id, :address, :monthly_rent, :square_feet
    @@class_name = "Apartment"

    # On Initializtion create the new APT instances with these attributes
    def initialize(initial_name, initial_age)
        @id = apt_id
        @address = apt_address
        @monthly_rent = apt_rent
        @square_feet = square_feet
        @@ruby_apartments.push(self)
      end
end

end

tenants.each do |apartment|
class Tenant
  attr_accessor :id, :name, :age, :apartment_id
  @@class_name = "Tenant"

  # On Initializtion create the new APT instances with these attributes
  def initialize(initial_name, initial_age)
    @id = apt_id
    @name = apt_address
    @age = apt_rent
    @apartment_id = square_feet
    @@ruby_tenants.push(self)
  end






# First, Open the data.rb an inspect the data. Identify and write, in comments, the following:
  # Explain how the data is structured
  # What are the properties for each of the two types of hashes

# Use enumerables to -

# Print all the addresses for the apartments

        # apartments.each do |apartment|
        #   puts apartment[:address]
        # end

  # Print all the names for tenants

        # tenants.each do |tenant|
        #   puts tenant[:name]
        # end

  # Print only apartments that are less then 700 in rent

        # apartments.each do |apartment|
        #     if apartment[:monthly_rent] < 700
        #       puts apartment[:address]
        #   end
        # end

  # Print only tenants that are over the age of 44
          # tenants.each do |tenant|
          #   if tenant[:age] > 44
          #     puts tenant[:name]
          #   end
          # end
  # Print only tenants that have an apartment id of 1
            # tenants.each do |tenant|
            #   if tenant[:apartment_id] == 1
            #     puts tenant[:name]
            #   end
            # end
  # Print all the tenants in order from youngest to oldest

              # puts tenants.sort_by{|tenant| tenant[:age]}


  # Print the names of all the tenants alphabetically
        # sorted_tenants = tenants.sort_by{|tenant| tenant[:name]}
        # sorted_tenants.each do |tenant|
        #   puts tenant[:name]
        # end

  ## More challenging
  # When printing tenants also print out the address that the tenant resides in.
  # When printing all apartments, under each apartment print all of its tenants
